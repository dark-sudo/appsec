## TO INSTALL SEALED SECRETS
## First install helm
curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

## install helm chart for sealed secrets from bitnami package in kube-system namespace
helm install my-release oci://registry-1.docker.io/bitnamicharts/sealed-secrets -n kube-system

## to check if it is well installed
command: helm list -n kube-system
output:
NAME            NAMESPACE       REVISION        UPDATED                                         STATUS          CHART                   APP VERSION
my-release      kube-system     1               2024-04-03 16:08:28.765320577 +0200 CEST        deployed        sealed-secrets-2.0.0    0.26.1A

## check if working
command: kubeseal --fetch-cert --controller-name my-release-sealed-secrets --controller-namespace kube-system
output:

   -----BEGIN CERTIFICATE-----
   MIIEzDCCArSgAwIBAgIQIaNKyY2jrmFA2+DILd9FEzANBgkqhkiG9w0BAQsFADAA
   MB4XDTI0MDQwMzEzMzg0OVoXDTM0MDQwMTEzMzg0OVowADCCAiIwDQYJKoZIhvcN
   AQEBBQADggIPADCCAgoCggIBAN0ZoDzfMZ+UKv6PLGrJnODrGpGae0ac3uFOHU4n
   qC/laPErQ3XtXaHDz6BUXMih6halGBf2k++3wg0suLijGZLux1IWrKWLCdt/H61Z
   z5OMbHkLCl3bFCRa6yEVITLGXbTa2Pj70vdNaMlHRmLt9krp+vXMmujLQTbmLFoa
   SER+Lwh6kVoF6fJzepP5+IIQ3Q4c14hP7224ILUC7Ouw2mhmThegjCQ2GKSkruO9
   dCvG2Kn5sShwCK2fjCa6lfcfQ3obO5HdxoTdArl7lBAlVfErWN7IxTRjMLnxDqky
   2c3RxkWqDHH0RzeegQZNSG+AwY4LBw2qGS66/EAXPPkxQ09tl+1h+1Jt6yn6eV9Z
   36dOwo/xUVtyXkQ8wRXPJuFJMcwIp7HVm4bE/+J3TtMZcM/gs2nUzVE1rAhtsT9F
   N0sSm+zAviZy/GNPlUqYdipIV1nq00jFe0wcZrghrAeJZpbvVxeAlxV0g4ZzCxoQ
   mDrLj//hLrUkReC2tiZoBa07UYXswpCrcHdRlF9DkrOmVCehoZhb+x3v1J92g451
   V5xWaArVTDV5dK0+rFeHJ8D09neRBM1CBRspyw2HWbHuJmLo/6KWBN20r6fXtXvX
   NkhNuptWGEAvxvwns7gwBaOb4uZZfu5Y2UfGBm+WCY3CTb+viCTT3WWggcp+3xeQ
   n14VAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIAATAPBgNVHRMBAf8EBTADAQH/MB0G
   A1UdDgQWBBSQzay/ovQwM7RzyDkFSZTZjjVmEDANBgkqhkiG9w0BAQsFAAOCAgEA
   LviC4s73g3hgtYsBihhiNenqJsDhktEkwG5bIo1myb6QFV4RKeyhnOe0ipZhIkHH
   NJcREXFByoKk85zIX6pavhPEW9TUWH/DHuKGG42Dwd8XYgGjXSVD5bjMheN0sreT
   9iocLERSPlBKnupvKBn0q/kZ1qswa6lAzi1CKZrNmi0Ji5LZrGPVSQXjxSji/fRQ
   ///s/ZtW0rf78bXZ6uQqXek7A2AMhre7VoeSRbPbT4jN4/CcAquOn2FRdj+oJAKF
   O32GVdVmYlcCFxBuSgHCGpqa0WTezYXAomDhKj10k1KVBF2NvqA+MXP0sxovlunJ
   p6dNVy+u3yj6JHmAzLC4G1JbIIoCBF5Hd/9yqzjNtuDUQyIXqb0CCeE8SK5oa68N
   s4P949OtkRm37pCcgUpw6kO3nd3mjh733UIJ3kItC+xMU21FyNEyLD5QT0b6ZZJp
   zen3J1ADgiY8VfPCAvFllDHlvZb4wTSNYLmbziPmm+dfg0ayv2F+bjp7f0n5ilHs
   y5sUeqZehwK9Z+u5hwNelW6fU1XBMBBcuqz9pcznnE1wd3mX35wL7gPxpcxYTvq/
   xU2QlAqTW9bZsy813ZmcgT468LhvLvZ1fCERPD4LvS13HmR04o1uouMgPefVKa07
   3gcVqUdCf2tGsTewzxhFBxEB86DjdkI1QXAbivllHDk=
   -----END CERTIFICATE-----

## Values that needs to be encrypted : (name: MYSQL_ROOT_PASSWORD value: thisisatestthing. in django-deploy.yaml)
## and (SECRET_KEY = 'kmgysa#fz+9(z1*=c0ydrjizk*7sthm2ga1z4=^61$cxcq8b$l' in settings.py)

## generate yaml file for those values to be in base64 before sealing them
command: 
   kubectl create secret generic my-secret \
     --from-literal=db_password='thisisatestthing.' \
     --from-literal=secret_key='kmgysa#fz+9(z1*=c0ydrjizk*7sthm2ga1z4=^61$cxcq8b$l' \
     --dry-run=client -o yaml > mysecrets.yaml

output: cat mysecrets.yaml

   apiVersion: v1
   data:
     DB_PASSWORD: dGhpc2lzYXRlc3R0aGluZy4=
     SECRET_KEY: a21neXNhI2Z6KzkoejEqPWMweWRyaml6ayo3c3RobTJnYTF6ND1eNjEkY3hjcThiJGw=
   kind: Secret
   metadata:
     creationTimestamp: null
     name: my-secret

## Use Kubeseal to seal secrets
command : cat mysecrets.yaml | kubeseal --controller-namespace kube-system --controller-name my-release-sealed-secrets --format yaml > part1.yaml

output : cat part1.yml

   apiVersion: bitnami.com/v1alpha1
   kind: SealedSecret
   metadata:
     creationTimestamp: null
     name: my-secret
     namespace: default
   spec:
     encryptedData:
       DB_PASSWORD: AgBP4VwdCFAXuURo0+1KbYLY+mXgTAMGMIckELdq0hd9uUWMqPyghke9GH/53CFIfNHSYGSk24kI8LzZWRgfLzPd10lamtLR95M7stmGpXpORvCVD+kNBBEmaNkDOtF2Hq3y+r6+zCWr1oEn+zqvOJjoWJeJXSXRrSNRoIVDykKBFBIFuDlolrnfSMXjmzGorjc8gXldH2kZ/er6JJ9GlJYyXxb+XW0MtSmAxKcU7+6oF93BTWbKXF/7j4mYykVjFlcBrevXj9Sk8YnKv0GcEFm3wjA3QWIiccRs1LgO+/brZl8b5rdH9KgZ/08JRJBIOwERU2PrZaGcyRuIb36oS+MD6yBk1ldSIQSa0wIivsJpGPW+MbR5kdD+d7yGEgeJMbWWBjmB1mdmw2elCdG7/IbjPN1RK8/84r4SmDcWdu9dLx+TFEY4DPNQBy+6oY/7PvvQHFGQ6FErIsjImKpS4ASthryR4g1RzBKs4Ps00xlfTpeYAlrNFNP04XxyWpuL0o6jG6mD9BXMvzBZtyG0LXpUxCCvvTQT2kvEg7dAuTAlJ/+NfJKycnv89PIYfgvgKeHpLtAYtIWTp/rg65uI04cfsNxo+Eb6f9/qtkKYf1nsz+4W+lGLueO4unPTSxhAVASUaLFKcN1WDXfLcKFbXi9EsF7WlHpuTxedJjTfR+x8Ilo8FIMdJVmGCU4eJ7XH5p34a2DIjI9fkeZQXGDx6oPqUw==
       SECRET_KEY: AgDaO96qR8d1Iwd8lGIlMDkTkxGh5GbnUKhQEIbsi8V76EWV9mUdcKZYbt3wtTxIiXookV3UisJCw8X4ImToRNa5veLwOeBZU/p/dTULthkB+cqmpTlwey5WG7bp2YQ7c1fbtqxFw2NAfZg3+BoWHjXxDrFe1YgIyfomCE1vM10/7pbGKV0xz2tDvVl5EZjjNswXKi/SQHo6sAqXsPAeOLDXhaG8EuE9Z4ykzV1ENTDXCKYwZrPh1DSron+RoWYSOMWKIGmZAdeoiNDgvt/RQByIDasQXsDXIXL+5wPP/da4aE2DWBmlQdrrVClP6z29Cur1vSvp9skZLrN+5BGqyheNRs5cbsYnWcyuiMd8zuAA2/QpLzB6C+ttIA+NM/jOdFqKssecL6rIQ3WKm8JW5K7nW9bMkXEIkfYSLqnWT+elEUGczBCiNsb3OpR9LlafHcR+TAVuNi7VgU8dxOqqCDx8ZsQOFUxxuc2/Uu4wpd1aAtAHxO23NOr/W4R0v9Pcq720bapw13VN9PXcHLO6EMEdOHouAyrPd4t5DGcmcWtuxmAXdEmBGixCQztbxhkHRb3FghnQB6gk9HFmiSJFID402qW+BcxuqAan36SDgb0rRoMeK00EqXQ43GFRF7I3HYw2qV4wU5EaAqGGcS8wOGNdZwQ9/jXqkKcSnF72McTt7JDgkW1e3JvmN/sLR1ssEr1MqGXKrQckx5ZuRENHfqDZnHLfwrYeEdlq+ZzN1G7lMVHvQTikxG59N/YJEg+P99aC0w==
     template:
       data: null
       metadata:
         creationTimestamp: null
         name: my-secret
         namespace: default


## Deploy the generated yaml file
command : kubectl apply -f part1.yaml
output : sealedsecret.bitnami.com/my-secret created


## To use it we need to change on django-deploy.yaml to use as environment variable
## instead of using environment "-name:... value: "" we use :
 env:
             - name: SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: my-secret
                    key: SECRET_KEY
 
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: my-secret
                    key: DB_PASSWORD

## We change settings.py to use environment variable
	SECRET_KEY = os.environ['SECRET_KEY']

## And then we apply, we redeploy this pod
command: kubectl apply -f GiftcardSite/k8
output: deployment.apps/assignment3-django-deploy configured
	service/assignment3-django-service unchanged

